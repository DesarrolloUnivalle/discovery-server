name: Deploy Discovery Server

on:
  push:
    branches:
      - main
      - test-workflow

env:
  SERVICE_NAME: discovery-server
  DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/discovery-server
  K8S_DIR: kubernetes
  GCP_PROJECT_ID: gcp-despliegue-desarrollo
  GKE_CLUSTER_NAME: cluster-desarrollo
  GKE_ZONE: us-central1-c

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:latest .
          docker push ${{ env.DOCKER_IMAGE }}:latest

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials ${{ env.GKE_CLUSTER_NAME }} --zone ${{ env.GKE_ZONE }} --project ${{ env.GCP_PROJECT_ID }}

      - name: Deploy to GKE
        run: |
          export DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}
          envsubst < ${{ env.K8S_DIR }}/deployment.yml > ${{ env.K8S_DIR }}/deployment-processed.yml
          
          echo "--- Applying deployment ---"
          cat ${{ env.K8S_DIR }}/deployment-processed.yml
          kubectl apply -f ${{ env.K8S_DIR }}/deployment-processed.yml
          
          echo "--- Applying service ---"
          cat ${{ env.K8S_DIR }}/service.yml
          kubectl apply -f ${{ env.K8S_DIR }}/service.yml
          
          echo "--- Waiting for deployment to be ready ---"
          kubectl rollout status deployment/${{ env.SERVICE_NAME }}-deployment --timeout=120s

      - name: Debug deployment failure
        if: failure()
        run: |
          echo "==== PODS ===="
          kubectl get pods -o wide
          
          echo "==== DESCRIBE POD ===="
          POD_NAME=$(kubectl get pod -l app=${{ env.SERVICE_NAME }} -o jsonpath="{.items[0].metadata.name}")
          if [ -n "$POD_NAME" ]; then
            kubectl describe pod $POD_NAME
            echo "==== LOGS ===="
            kubectl logs $POD_NAME
          else
            echo "No pod found for the service."
          fi
          
          echo "==== SERVICES ===="
          kubectl get services -o wide
          
          echo "==== DESCRIBE SERVICE ===="
          kubectl describe service/${{ env.SERVICE_NAME }}-service 